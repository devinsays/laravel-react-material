{"version":3,"sources":["store/reducers/Auth.js","store/action-types/index.js","store/reducers/persistStore.js","store/reducers/index.js","store/index.js","http.js","store/actions/index.js","config.js","services/authService.js","services/index.js","utils/validation.js","components/Loader.js","components/LoginForm.js","pages/Register.js","pages/ForgotPassword.js","pages/ResetPassword.js","pages/NoMatch.js","routes/routes.js","pages/Dashboard.js","pages/Home.js","pages/Login.js","pages/Archive.js","components/Header.js","Base.js","routes/Public.js","routes/Private.js","routes/Split.js","routes/index.js","theme.js","App.js","serviceWorker.js","index.js"],"names":["defaultUser","id","name","email","initialState","isAuthenticated","user","authLogin","state","payload","AccessToken","access_token","localStorage","setItem","JSON","stringify","http","defaults","headers","common","Authorization","Object","assign","checkAuth","stateObj","getItem","parse","logout","removeItem","Auth","type","persistStore","reducer","RootReducer","combineReducers","store","createStore","compose","applyMiddleware","ReduxThunk","token","axios","interceptors","response","use","error","status","dispatch","Promise","reject","apiBase","login","credentials","resolve","post","then","res","data","catch","err","errors","register","resetPassword","updatePassword","message","AuthService","nameValidationError","value","length","emailValidationError","isEmail","passwordValidationError","passwordConfirmValidationError","password","useStyles","makeStyles","theme","loader","color","white","Loader","classes","CircularProgress","size","thickness","className","connect","props","useState","loading","setLoading","setEmail","setPassword","validationErrors","setValidationErrors","setResponse","handleChange","e","target","handleBlur","validationError","submit","values","join","from","location","pathname","to","Box","mb","Typography","component","variant","align","Paper","elevation","p","pb","noValidate","autoComplete","onSubmit","preventDefault","isEqual","severity","TextField","label","onChange","onBlur","disabled","fullWidth","helperText","Button","disableElevation","mt","success","setSuccess","setName","passwordConfirm","setPasswordConfirm","Helmet","Container","maxWidth","pt","pr","pl","href","password_confirmation","ForgotPassword","defaultProps","getResetId","params","URLSearchParams","search","has","get","getResetToken","routes","path","exact","auth","todo","setTodo","setError","setData","api","useEffect","addTodo","allTodos","method","FormControl","InputLabel","htmlFor","FilledInput","endAdornment","InputAdornment","position","IconButton","aria-label","role","Grid","container","justify","alignItems","item","style","marginBottom","Table","TableHead","TableRow","TableCell","TableBody","map","row","key","scope","onClick","todos","patch","updatedTodos","filter","parseInt","closeTodo","fallback","spacing","xs","sm","py","Register","ResetPassword","apiMore","setApiMore","moreLoaded","setMoreLoaded","links","next","Array","created_at","delete","index","findIndex","update","slice","console","log","deleteTodo","dataMore","concat","title","flexGrow","titleLink","textDecoration","React","anchorEl","setAnchorEl","open","Boolean","history","useHistory","AppBar","Toolbar","aria-controls","aria-haspopup","event","currentTarget","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","push","children","direction","minHeight","px","PublicRoute","Component","rest","render","Fallback","Routes","basename","process","route","Split","Private","Public","createMuiTheme","text","bg1","bg2","palette","primary","light","main","dark","contrastText","typography","fontSize","h1","fontWeight","h2","h3","body1","overrides","MuiMenuItem","root","MuiInputBase","App","ThemeProvider","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9f263873.chunk.js","sourcesContent":["import * as ActionTypes from '../action-types';\nimport http from '../../http';\n\nconst defaultUser = {\n  id: null,\n  name: null,\n  email: null\n};\n\nconst initialState = {\n  isAuthenticated: false,\n  user: defaultUser\n};\n\nconst authLogin = (state, payload) => {\n  const { access_token: AccessToken, user } = payload;\n  localStorage.setItem('access_token', AccessToken);\n  localStorage.setItem('user', JSON.stringify(user));\n  http.defaults.headers.common.Authorization = `Bearer ${AccessToken}`;\n  const stateObj = Object.assign({}, state, {\n    isAuthenticated: true,\n    user\n  });\n  return stateObj;\n};\n\nconst checkAuth = state => {\n  const stateObj = Object.assign({}, state, {\n    isAuthenticated: !!localStorage.getItem('access_token'),\n    user: JSON.parse(localStorage.getItem('user'))\n  });\n  if (state.isAuthenticated) {\n    http.defaults.headers.common.Authorization = `Bearer ${localStorage.getItem(\n      'access_token'\n    )}`;\n  }\n  return stateObj;\n};\n\nconst logout = state => {\n  localStorage.removeItem('access_token');\n  localStorage.removeItem('user');\n  const stateObj = Object.assign({}, state, {\n    isAuthenticated: false,\n    user: defaultUser\n  });\n  return stateObj;\n};\n\nconst Auth = (state = initialState, { type, payload = null }) => {\n  switch (type) {\n    case ActionTypes.AUTH_LOGIN:\n      return authLogin(state, payload);\n    case ActionTypes.AUTH_CHECK:\n      return checkAuth(state);\n    case ActionTypes.AUTH_LOGOUT:\n      return logout(state);\n    default:\n      return state;\n  }\n};\n\nexport default Auth;\n","export const AUTH_LOGIN = 'AUTH_LOGIN';\nexport const AUTH_CHECK = 'AUTH_CHECK';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\n","function persistStore(state, payload) {\n  const stateObj = Object.assign({}, state, payload);\n  return stateObj;\n}\n\nconst reducer = (state = {}, { type, payload = null }) => {\n  switch (type) {\n    case 'persist/REHYDRATE':\n      return persistStore(state, payload);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { combineReducers } from 'redux';\nimport Auth from './Auth';\nimport persistStore from './persistStore';\n\nconst RootReducer = combineReducers({ Auth, persistStore });\n\nexport default RootReducer;\n","import { applyMiddleware, createStore, compose } from 'redux';\nimport { persistStore } from 'redux-persist';\nimport ReduxThunk from 'redux-thunk';\nimport RootReducer from './reducers';\n\nconst store = createStore(RootReducer, compose(applyMiddleware(ReduxThunk)));\n\npersistStore(store);\n\nexport default store;\n","import axios from 'axios';\nimport store from './store';\n\nimport * as actions from './store/actions';\n\nconst token = localStorage.getItem('access_token');\naxios.defaults.headers.common.Authorization = `Bearer ${token}`;\n\naxios.interceptors.response.use(\n  response => response,\n  error => {\n    if (error.response.status === 401) {\n      store.dispatch(actions.authLogout());\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport default axios;\n","import * as ActionTypes from '../action-types';\n\nexport function authLogin(payload) {\n  return {\n    type: ActionTypes.AUTH_LOGIN,\n    payload\n  };\n}\n\nexport function authLogout() {\n  return {\n    type: ActionTypes.AUTH_LOGOUT\n  };\n}\n\nexport function authCheck() {\n  return {\n    type: ActionTypes.AUTH_CHECK\n  };\n}\n","export const apiBase = 'https://laravelreact.com';\n","import http from '../http';\nimport * as action from '../store/actions';\nimport { apiBase } from '../config';\n\nexport function login(credentials) {\n  return dispatch =>\n    new Promise((resolve, reject) => {\n      http\n        .post(`${apiBase}/api/v1/auth/login`, credentials)\n        .then(res => {\n          dispatch(action.authLogin(res.data));\n          return resolve();\n        })\n        .catch(err => {\n          const { status, errors } = err.response.data;\n          const data = {\n            status,\n            errors: errors ? errors : ['Unknown error.']\n          };\n          return reject(data);\n        });\n    });\n}\n\nexport function register(credentials) {\n  return dispatch =>\n    new Promise((resolve, reject) => {\n      http\n        .post(`${apiBase}/api/v1/auth/register`, credentials)\n        .then(res => resolve(res.data))\n        .catch(err => {\n          const { status, errors } = err.response.data;\n          const data = {\n            status,\n            errors\n          };\n          return reject(data);\n        });\n    });\n}\n\nexport function resetPassword(credentials) {\n  return dispatch =>\n    new Promise((resolve, reject) => {\n      http\n        .post(`${apiBase}/api/v1/auth/forgot-password`, credentials)\n        .then(res => resolve(res.data))\n        .catch(err => {\n          const { status, errors } = err.response.data;\n          const data = {\n            status,\n            errors\n          };\n          return reject(data);\n        });\n    });\n}\n\nexport function updatePassword(credentials) {\n  return dispatch =>\n    new Promise((resolve, reject) => {\n      http\n        .post(`${apiBase}/api/v1/auth/password-reset`, credentials)\n        .then(res => {\n          const { status } = res.data.status;\n          if (status === 202) {\n            const data = {\n              error: res.data.message,\n              status\n            };\n            return reject(data);\n          }\n          return resolve(res);\n        })\n        .catch(err => {\n          const { status, errors } = err.response.data;\n          const data = {\n            status,\n            errors\n          };\n          return reject(data);\n        });\n    });\n}\n","import * as AuthService from './authService';\n\nexport default AuthService;\n","import isEmail from 'validator/es/lib/isEmail';\n\nexport const nameValidationError = value => {\n  if (value.length < 3) {\n    return 'Name must be at least 3 characters.';\n  }\n  return false;\n};\n\nexport const emailValidationError = (value = '') => {\n  if (!isEmail(value)) {\n    return 'The email field must be a valid email.';\n  }\n  return false;\n};\n\nexport const passwordValidationError = (value = '') => {\n  if (value.length < 6) {\n    return 'The password field must be at least 6 characters.';\n  }\n  return false;\n};\n\nexport const passwordConfirmValidationError = (value = '', password = '') => {\n  if (value.length < 6) {\n    return 'The password field must be at least 6 characters.';\n  }\n  if (password !== value) {\n    return 'Password confirmation does not match password.';\n  }\n  return false;\n};\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CircularProgress } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  loader: {\n    color: theme.white\n  }\n}));\n\nexport default function Loader() {\n  // Styles.\n  const classes = useStyles();\n\n  return (\n    <CircularProgress size={24} thickness={4} className={classes.loader} />\n  );\n}\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport { TextField, Button, Typography, Box, Paper } from '@material-ui/core';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport isEqual from 'lodash/isEqual';\n\nimport AuthService from '../services';\nimport {\n  emailValidationError,\n  passwordValidationError\n} from '../utils/validation.js';\nimport Loader from './Loader';\n\nfunction LoginForm(props) {\n  // State hooks.\n  const [loading, setLoading] = useState(false);\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const [validationErrors, setValidationErrors] = useState({\n    email: false,\n    password: false\n  });\n  const [response, setResponse] = useState({\n    error: false,\n    message: ''\n  });\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    // Remove existing validation error for field.\n    // We'll do a fresh validation check on blur or submission.\n    if (name in validationErrors) {\n      setValidationErrors({ ...validationErrors, [name]: false });\n    }\n\n    if (name === 'email') {\n      setEmail(value);\n      return;\n    }\n\n    if (name === 'password') {\n      setPassword(value);\n      return;\n    }\n  };\n\n  const handleBlur = e => {\n    const { name, value } = e.target;\n\n    // Avoid validation until input has a value.\n    if (value === '') {\n      return;\n    }\n\n    let validationError = false;\n\n    if (name === 'email') {\n      setEmail(value);\n      validationError = emailValidationError(value);\n    }\n\n    if (name === 'password') {\n      setPassword(value);\n      validationError = passwordValidationError(value);\n    }\n\n    // Set the validation error if validation failed.\n    if (validationError !== false) {\n      setValidationErrors({ ...validationErrors, [name]: validationError });\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Runs final form validation.\n    const errors = {\n      email: emailValidationError(email),\n      password: passwordValidationError(password)\n    };\n\n    // Compares the objects to see if validation messages have changed.\n    const validates = isEqual(validationErrors, errors);\n\n    if (validates) {\n      setLoading(true);\n      submit({ email, password });\n    } else {\n      setValidationErrors({ ...errors });\n    }\n  };\n\n  const submit = credentials => {\n    props.dispatch(AuthService.login(credentials)).catch(err => {\n      const errors = Object.values(err.errors);\n      errors.join(' ');\n      const response = {\n        error: true,\n        message: errors\n      };\n      setResponse(response);\n      setLoading(false);\n      setEmail('');\n      setPassword('');\n    });\n  };\n\n  // If user is already authenticated we redirect to entry location.\n  const { isAuthenticated } = props;\n  if (isAuthenticated) {\n    const { from } = props.location?.state || { from: { pathname: '/' } };\n    return <Redirect to={from} />;\n  }\n\n  return (\n    <div>\n      <Box mb={3}>\n        <Typography component=\"h3\" variant=\"h3\" align=\"center\">\n          Log in to the App\n        </Typography>\n      </Box>\n\n      <Paper elevation={3}>\n        <Box p={4} pb={3}>\n          <form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n            {response.error && (\n              <Box mb={2}>\n                <MuiAlert severity=\"error\">{response.message}</MuiAlert>\n              </Box>\n            )}\n            <Box mb={2}>\n              <Box mb={2}>\n                <TextField\n                  name=\"email\"\n                  label=\"Email Address\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  disabled={loading}\n                  variant=\"filled\"\n                  fullWidth\n                  error={validationErrors.email !== false}\n                  helperText={validationErrors.email}\n                />\n              </Box>\n              <Box mb={2}>\n                <TextField\n                  name=\"password\"\n                  label=\"Password\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  disabled={loading}\n                  variant=\"filled\"\n                  fullWidth\n                  error={validationErrors.password !== false}\n                  helperText={validationErrors.password}\n                  type=\"password\"\n                />\n              </Box>\n            </Box>\n            <Box mb={2}>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                disabled={loading}\n                fullWidth\n                type=\"submit\"\n                disableElevation\n              >\n                {!loading && <span>Sign In</span>}\n                {loading && <Loader />}\n              </Button>\n            </Box>\n            <Typography variant=\"body2\" align=\"center\">\n              Don't have an account? <Link to=\"/register\">Register</Link>.\n            </Typography>\n          </form>\n        </Box>\n      </Paper>\n      <Box mt={4}>\n        <Typography align=\"center\" variant=\"body2\">\n          <Link to=\"/forgot-password\">Forgot Your Password?</Link>\n        </Typography>\n      </Box>\n    </div>\n  );\n}\n\nLoginForm.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool.isRequired\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.Auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps)(LoginForm);\n","import React, { useState } from 'react';\nimport { Helmet } from 'react-helmet';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport {\n  Container,\n  TextField,\n  Button,\n  Typography,\n  Box,\n  Paper\n} from '@material-ui/core';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport isEqual from 'lodash/isEqual';\n\nimport AuthService from '../services';\nimport {\n  nameValidationError,\n  emailValidationError,\n  passwordValidationError,\n  passwordConfirmValidationError\n} from '../utils/validation.js';\nimport Loader from '../components/Loader';\n\nfunction Register(props) {\n  // State hooks.\n  const [loading, setLoading] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [name, setName] = useState();\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState('');\n  const [passwordConfirm, setPasswordConfirm] = useState('');\n  const [validationErrors, setValidationErrors] = useState({\n    name: false,\n    email: false,\n    password: false,\n    passwordConfirm: false\n  });\n  const [response, setResponse] = useState({\n    error: false,\n    message: ''\n  });\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    // Remove existing validation error for field.\n    // We'll do a fresh validation check on blur or submission.\n    if (name in validationErrors) {\n      setValidationErrors({ ...validationErrors, [name]: false });\n    }\n\n    if (name === 'name') {\n      setName(value);\n      return;\n    }\n\n    if (name === 'email') {\n      setEmail(value);\n      return;\n    }\n\n    if (name === 'password') {\n      setPassword(value);\n      return;\n    }\n\n    if (name === 'passwordConfirm') {\n      setPasswordConfirm(value);\n      return;\n    }\n  };\n\n  const handleBlur = e => {\n    const { name, value } = e.target;\n\n    // Avoid validation until input has a value.\n    if (value === '') {\n      return;\n    }\n\n    let validationError = false;\n\n    if (name === 'name') {\n      setName(value);\n      validationError = nameValidationError(value);\n    }\n\n    if (name === 'email') {\n      setEmail(value);\n      validationError = emailValidationError(value);\n    }\n\n    if (name === 'password') {\n      setPassword(value);\n      validationError = passwordValidationError(value);\n    }\n\n    if (name === 'passwordConfirm') {\n      setPasswordConfirm(value);\n      validationError = passwordConfirmValidationError(value, password);\n    }\n\n    // Set the validation error if validation failed.\n    if (validationError !== false) {\n      setValidationErrors({ ...validationErrors, [name]: validationError });\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Runs final form validation.\n    const errors = {\n      name: nameValidationError(name),\n      email: emailValidationError(email),\n      password: passwordValidationError(password),\n      passwordConfirm: passwordConfirmValidationError(passwordConfirm, password)\n    };\n\n    // Compares the objects to see if validation messages have changed.\n    const validates = isEqual(validationErrors, errors);\n\n    if (validates) {\n      setLoading(true);\n      submit({ name, email, password, password_confirmation: passwordConfirm });\n    } else {\n      setValidationErrors({ ...errors });\n    }\n  };\n\n  const submit = credentials => {\n    props\n      .dispatch(AuthService.register(credentials))\n      .then(() => {\n        setLoading(false);\n        setSuccess(true);\n      })\n      .catch(err => {\n        const errors = Object.values(err.errors);\n        errors.join(' ');\n        const response = {\n          error: true,\n          message: errors\n        };\n        setResponse(response);\n        setLoading(false);\n      });\n  };\n\n  // If user is already authenticated we redirect to entry location.\n  const { isAuthenticated } = props;\n  if (isAuthenticated) {\n    const { from } = props.location.state || { from: { pathname: '/' } };\n    return <Redirect to={from} />;\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>Register | Laravel Material</title>\n      </Helmet>\n      <Container maxWidth=\"sm\">\n        <Box mb={3}>\n          <Typography component=\"h3\" variant=\"h3\" align=\"center\">\n            Register for the App\n          </Typography>\n        </Box>\n        <Paper elevation={3}>\n          <Box pt={2} pr={4} pb={4} pl={4}>\n            {success && (\n              <MuiAlert severity=\"success\">\n                Registration successful.\n                <Link to=\"/\" href=\"/\">\n                  Please log in with your new email and password.\n                </Link>\n              </MuiAlert>\n            )}\n            {!success && (\n              <form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n                {response.error && (\n                  <MuiAlert severity=\"error\">{response.message}</MuiAlert>\n                )}\n                <Box mb={3}></Box>\n                <Box mb={2}>\n                  <Box mb={2}>\n                    <TextField\n                      name=\"name\"\n                      label=\"Full Name\"\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      disabled={loading}\n                      variant=\"filled\"\n                      fullWidth\n                      error={validationErrors.name !== false}\n                      helperText={validationErrors.name}\n                    />\n                  </Box>\n                  <Box mb={2}>\n                    <TextField\n                      name=\"email\"\n                      label=\"Email Address\"\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      disabled={loading}\n                      variant=\"filled\"\n                      fullWidth\n                      error={validationErrors.email !== false}\n                      helperText={validationErrors.email}\n                    />\n                  </Box>\n                  <Box mb={2}>\n                    <TextField\n                      name=\"password\"\n                      label=\"Password\"\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      disabled={loading}\n                      variant=\"filled\"\n                      fullWidth\n                      error={validationErrors.password !== false}\n                      helperText={validationErrors.password}\n                      type=\"password\"\n                    />\n                  </Box>\n                  <Box mb={2}>\n                    <TextField\n                      name=\"passwordConfirm\"\n                      label=\"Confirm Password\"\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      disabled={loading}\n                      variant=\"filled\"\n                      fullWidth\n                      error={validationErrors.passwordConfirm !== false}\n                      helperText={validationErrors.passwordConfirm}\n                      type=\"password\"\n                    />\n                  </Box>\n                </Box>\n                <Box mb={2}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    disabled={loading}\n                    fullWidth\n                    type=\"submit\"\n                  >\n                    {!loading && <span>Register</span>}\n                    {loading && <Loader />}\n                  </Button>\n                </Box>\n                <Typography variant=\"body2\" align=\"center\">\n                  Already have an account? <Link to=\"/login\">Log in</Link>.\n                </Typography>\n              </form>\n            )}\n          </Box>\n        </Paper>\n      </Container>\n    </>\n  );\n}\n\nRegister.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool.isRequired\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.Auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps)(Register);\n","import React, { useState } from 'react';\nimport { Helmet } from 'react-helmet';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport {\n  Container,\n  TextField,\n  Button,\n  Typography,\n  Box,\n  Paper\n} from '@material-ui/core';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport isEqual from 'lodash/isEqual';\n\nimport AuthService from '../services';\nimport { emailValidationError } from '../utils/validation.js';\nimport Loader from '../components/Loader';\n\nfunction ForgotPassword(props) {\n  // State hooks.\n  const [loading, setLoading] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [email, setEmail] = useState();\n  const [validationErrors, setValidationErrors] = useState({\n    email: false\n  });\n  const [response, setResponse] = useState({\n    error: false,\n    message: ''\n  });\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    // Remove existing validation error for field.\n    // We'll do a fresh validation check on blur or submission.\n    if (name in validationErrors) {\n      setValidationErrors({ ...validationErrors, [name]: false });\n    }\n\n    if (name === 'email') {\n      setEmail({ value });\n    }\n  };\n\n  const handleBlur = e => {\n    const { name, value } = e.target;\n\n    // Avoid validation until input has a value.\n    if (value === '') {\n      return;\n    }\n\n    let validationError = false;\n\n    if (name === 'email') {\n      setEmail(value);\n      validationError = emailValidationError(value);\n    }\n\n    // Set the validation error if validation failed.\n    if (validationError !== false) {\n      setValidationErrors({ ...validationErrors, [name]: validationError });\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Runs final form validation.\n    const errors = {\n      email: emailValidationError(email)\n    };\n\n    // Compares the objects to see if validation messages have changed.\n    const validates = isEqual(validationErrors, errors);\n\n    if (validates) {\n      setLoading(true);\n      submit({ email });\n    } else {\n      setValidationErrors({ ...errors });\n    }\n  };\n\n  const submit = credentials => {\n    props\n      .dispatch(AuthService.resetPassword(credentials))\n      .then(() => {\n        setLoading(false);\n        setSuccess(true);\n      })\n      .catch(err => {\n        const errors = Object.values(err.errors);\n        errors.join(' ');\n        const response = {\n          error: true,\n          message: errors\n        };\n        setResponse(response);\n        setLoading(false);\n      });\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>Forgot Password | Laravel Material</title>\n      </Helmet>\n      <Container maxWidth=\"sm\">\n        <Typography component=\"h3\" variant=\"h3\" align=\"center\">\n          Request Password Reset\n        </Typography>\n        <Paper elevation={3}>\n          <Box p={4} pb={3}>\n            {success && (\n              <MuiAlert severity=\"success\">\n                A password reset link has been sent!\n              </MuiAlert>\n            )}\n            {!success && (\n              <form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n                {response.error && (\n                  <Box mb={3}>\n                    <MuiAlert severity=\"error\">{response.message}</MuiAlert>\n                  </Box>\n                )}\n                <Box mb={2}>\n                  <div>\n                    <TextField\n                      name=\"email\"\n                      label=\"Email Address\"\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      disabled={loading}\n                      variant=\"filled\"\n                      fullWidth\n                      error={validationErrors.email !== false}\n                      helperText={validationErrors.email}\n                    />\n                  </div>\n                </Box>\n                <Box mb={2}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    disabled={loading}\n                    fullWidth\n                    type=\"submit\"\n                  >\n                    {!loading && <span>Send Password Reset Email</span>}\n                    {loading && <Loader />}\n                  </Button>\n                </Box>\n              </form>\n            )}\n          </Box>\n        </Paper>\n      </Container>\n    </>\n  );\n}\n\nForgotPassword.defaultProps = {\n  location: {\n    state: {\n      pathname: '/'\n    }\n  }\n};\n\nForgotPassword.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool.isRequired,\n  location: PropTypes.shape({\n    state: {\n      pathname: PropTypes.string\n    }\n  })\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.Auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps)(ForgotPassword);\n","import React, { useState } from 'react';\nimport { Helmet } from 'react-helmet';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport {\n  Container,\n  TextField,\n  Button,\n  Typography,\n  Box,\n  Paper\n} from '@material-ui/core';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport isEqual from 'lodash/isEqual';\n\nimport AuthService from '../services';\nimport {\n  passwordValidationError,\n  passwordConfirmValidationError\n} from '../utils/validation.js';\nimport Loader from '../components/Loader';\n\nfunction ForgotPassword(props) {\n  // State hooks.\n  const [loading, setLoading] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [password, setPassword] = useState();\n  const [passwordConfirm, setPasswordConfirm] = useState();\n  const [validationErrors, setValidationErrors] = useState({\n    password: false,\n    passwordConfirm: false\n  });\n  const [response, setResponse] = useState({\n    error: false,\n    message: ''\n  });\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    // Remove existing validation error for field.\n    // We'll do a fresh validation check on blur or submission.\n    if (name in validationErrors) {\n      setValidationErrors({ ...validationErrors, [name]: false });\n    }\n\n    if (name === 'password') {\n      setPassword({ value });\n      return;\n    }\n\n    if (name === 'passwordConfirm') {\n      setPasswordConfirm({ value });\n      return;\n    }\n  };\n\n  const handleBlur = e => {\n    const { name, value } = e.target;\n\n    // Avoid validation until input has a value.\n    if (value === '') {\n      return;\n    }\n\n    let validationError = false;\n\n    if (name === 'password') {\n      setPassword(value);\n      validationError = passwordValidationError(value);\n    }\n\n    if (name === 'passwordConfirm') {\n      setPasswordConfirm(value);\n      validationError = passwordValidationError(value);\n      // Ensures password and passwordConfirm match.\n      if (validationError === false && password !== value) {\n        validationError = 'Password confirmation does not match password.';\n      }\n    }\n\n    // Set the validation error if validation failed.\n    if (validationError !== false) {\n      setValidationErrors({ ...validationErrors, [name]: validationError });\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Runs final form validation.\n    const errors = {\n      password: passwordValidationError(password),\n      passwordConfirm: passwordConfirmValidationError(passwordConfirm, password)\n    };\n\n    // Compares the objects to see if validation messages have changed.\n    const validates = isEqual(validationErrors, errors);\n\n    if (validates) {\n      setLoading(true);\n      submit({\n        password,\n        password_confirmation: passwordConfirm\n      });\n    } else {\n      setValidationErrors({ ...errors });\n    }\n  };\n\n  const getResetId = () => {\n    const params = new URLSearchParams(props.location.search);\n    if (params.has('id')) {\n      return params.get('id');\n    }\n    return '';\n  };\n\n  const getResetToken = () => {\n    const params = new URLSearchParams(props.location.search);\n    if (params.has('token')) {\n      return params.get('token');\n    }\n    return '';\n  };\n\n  const submit = credentials => {\n    const payload = {\n      id: getResetId(),\n      token: getResetToken(),\n      ...credentials\n    };\n    props\n      .dispatch(AuthService.updatePassword(payload))\n      .then(() => {\n        setLoading(false);\n        setSuccess(true);\n      })\n      .catch(err => {\n        const errors = Object.values(err.errors);\n        errors.join(' ');\n        const response = {\n          error: true,\n          message: errors\n        };\n        setResponse(response);\n        setLoading(false);\n      });\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>Reset Password | Laravel Material</title>\n      </Helmet>\n      <Container maxWidth=\"sm\">\n        <Typography component=\"h3\" variant=\"h3\" align=\"center\">\n          Reset Your Password\n        </Typography>\n        <Paper elevation={3}>\n          <Box p={4} pb={3}>\n            {success && (\n              <MuiAlert severity=\"success\">\n                Your password has been reset!\n              </MuiAlert>\n            )}\n            {!success && (\n              <form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n                {response.error && (\n                  <MuiAlert severity=\"error\">{response.message}</MuiAlert>\n                )}\n                <Box mb={3}></Box>\n                <Box mb={2}>\n                  <div>\n                    <TextField\n                      name=\"password\"\n                      label=\"Password\"\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      disabled={loading}\n                      variant=\"filled\"\n                      fullWidth\n                      error={validationErrors.email !== false}\n                      helperText={validationErrors.email}\n                      type=\"password\"\n                    />\n                  </div>\n                  <div>\n                    <TextField\n                      name=\"passwordConfirm\"\n                      label=\"Confirm Password\"\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      disabled={loading}\n                      variant=\"filled\"\n                      fullWidth\n                      error={validationErrors.password !== false}\n                      helperText={validationErrors.password}\n                      type=\"password\"\n                    />\n                  </div>\n                </Box>\n                <Box mb={2}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    disabled={loading}\n                    fullWidth\n                    type=\"submit\"\n                  >\n                    {!loading && <span>Send Password Reset Email</span>}\n                    {loading && <Loader />}\n                  </Button>\n                </Box>\n              </form>\n            )}\n          </Box>\n        </Paper>\n      </Container>\n    </>\n  );\n}\n\nForgotPassword.defaultProps = {\n  location: {\n    state: {\n      pathname: '/'\n    }\n  }\n};\n\nForgotPassword.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool.isRequired,\n  location: PropTypes.shape({\n    state: {\n      pathname: PropTypes.string\n    }\n  })\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.Auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps)(ForgotPassword);\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\n\nimport { Typography } from '@material-ui/core';\n\nconst NoMatch = () => (\n  <>\n    <Helmet>\n      <title>404 | Laravel Material</title>\n    </Helmet>\n    <Typography component=\"h2\" variant=\"h1\" align=\"center\">\n      404\n    </Typography>\n    <Typography align=\"center\">No page found.</Typography>\n  </>\n);\n\nexport default NoMatch;\n","import Home from '../pages/Home';\nimport Login from '../pages/Login';\nimport Dashboard from '../pages/Dashboard';\nimport Register from '../pages/Register';\nimport ForgotPassword from '../pages/ForgotPassword';\nimport ResetPassword from '../pages/ResetPassword';\nimport Archive from '../pages/Archive';\nimport NoMatch from '../pages/NoMatch';\n\nconst routes = [\n  {\n    path: '/',\n    exact: true,\n    auth: true,\n    component: Dashboard,\n    fallback: Home\n  },\n  {\n    path: `/login`,\n    exact: true,\n    auth: false,\n    component: Login\n  },\n  {\n    path: `/register`,\n    exact: true,\n    auth: false,\n    component: Register\n  },\n  {\n    path: `/forgot-password`,\n    exact: true,\n    auth: false,\n    component: ForgotPassword\n  },\n  {\n    path: `/reset-password`,\n    exact: true,\n    auth: false,\n    component: ResetPassword\n  },\n  {\n    path: `/archive`,\n    exact: true,\n    auth: true,\n    component: Archive\n  },\n  {\n    path: '',\n    exact: false,\n    auth: false,\n    component: NoMatch\n  }\n];\n\nexport default routes;\n","import React, { useEffect, useState } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { Link } from 'react-router-dom';\nimport {\n  Box,\n  Typography,\n  Paper,\n  Container,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  IconButton,\n  FormControl,\n  InputLabel,\n  FilledInput,\n  InputAdornment,\n  Grid\n} from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport CloseIcon from '@material-ui/icons/HighlightOff';\n\nimport { apiBase } from '../config';\nimport http from '../http';\n\nexport default function Dashboard() {\n  // State hooks.\n  const [todo, setTodo] = useState('');\n  const [error, setError] = useState(false);\n  const [data, setData] = useState([]);\n\n  // API Path\n  const api = `${apiBase}/api/v1/todo`;\n\n  // Effect runs once on mount.\n  useEffect(() => {\n    http\n      .get(`${api}?status=open`)\n      .then(response => {\n        const { data } = response.data;\n        setData(data);\n        setError(false);\n      })\n      .catch(() => {\n        setError('Unable to fetch data.');\n      });\n  }, [api]);\n\n  const handleChange = e => {\n    const { value } = e.target;\n    setTodo(value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    addTodo(todo);\n  };\n\n  const addTodo = todo => {\n    http\n      .post(api, { value: todo })\n      .then(({ data: response }) => {\n        const newItem = {\n          id: response.id,\n          value: todo\n        };\n        const allTodos = [newItem, ...data];\n        setData(allTodos);\n        setTodo('');\n      })\n      .catch(() => {\n        setError('Sorry, there was an error saving your to do.');\n      });\n  };\n\n  const closeTodo = id => {\n    const todos = data;\n\n    http\n      .patch(`${api}/${id}`, { status: 'closed' })\n      .then(() => {\n        const updatedTodos = todos.filter(todo => todo.id !== parseInt(id, 10));\n        setData(updatedTodos);\n      })\n      .catch(() => {\n        setError('Sorry, there was an error closing your to do.');\n      });\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>Dashboard | Laravel Material</title>\n      </Helmet>\n      <Container maxWidth=\"md\">\n        <Box mb={6}>\n          <Typography component=\"h2\" variant=\"h3\">\n            Add a Task\n          </Typography>\n\n          <form method=\"post\" onSubmit={handleSubmit}>\n            <FormControl fullWidth variant=\"filled\">\n              <InputLabel htmlFor=\"add-todo\">New Task</InputLabel>\n              <FilledInput\n                id=\"add-todo\"\n                onChange={handleChange}\n                value={todo}\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <IconButton aria-label=\"add task\" type=\"submit\">\n                      <AddIcon />\n                    </IconButton>\n                  </InputAdornment>\n                }\n              />\n            </FormControl>\n          </form>\n        </Box>\n\n        {error && (\n          <div className=\"alert alert-warning\" role=\"alert\">\n            {error}\n          </div>\n        )}\n\n        <Box mb={2}>\n          <Grid container justify=\"space-between\" alignItems=\"center\">\n            <Grid item>\n              <Typography\n                component=\"h2\"\n                variant=\"h3\"\n                style={{ marginBottom: '0' }}\n              >\n                Open Tasks\n              </Typography>\n            </Grid>\n            <Grid item>\n              <Link to=\"/archive\">View Archive</Link>\n            </Grid>\n          </Grid>\n        </Box>\n\n        <Paper>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>To Do</TableCell>\n                <TableCell align=\"right\">Action</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {data.map(row => (\n                <TableRow key={row.id}>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.value}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <IconButton\n                      aria-label=\"Close\"\n                      onClick={() => closeTodo(row.id)}\n                    >\n                      <CloseIcon />\n                    </IconButton>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Paper>\n      </Container>\n    </>\n  );\n}\n","import React from 'react';\nimport { Typography, Grid, Box } from '@material-ui/core';\n\nimport LoginForm from '../components/LoginForm';\n\nexport default function Home() {\n  return (\n    <Grid container spacing={2} justify=\"center\" alignItems=\"center\">\n      <Grid item xs={12} sm={6}>\n        <Typography component=\"h2\" variant=\"h3\">\n          Example To Do App\n        </Typography>\n        <Box py={2} pr={4}>\n          <Typography>\n            This headless frontend was built with{' '}\n            <a href=\"https://material-ui.com/\">Material UI</a> and scaffolded\n            with{' '}\n            <a href=\"https://reactjs.org/docs/create-a-new-react-app.html\">\n              Create React App\n            </a>\n            . The project authenticates and stores data using{' '}\n            <a href=\"https://github.com/devinsays/laravel-react-bootstrap\">\n              an API built in Laravel\n            </a>\n            .\n          </Typography>\n          <Typography>\n            <a href=\"https://github.com/devinsays/laravel-react-material\">\n              Source code and documentation on GitHub.\n            </a>\n          </Typography>\n        </Box>\n      </Grid>\n      <Grid item xs={12} sm={6}>\n        <LoginForm />\n      </Grid>\n    </Grid>\n  );\n}\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { Container } from '@material-ui/core';\n\nimport LoginForm from '../components/LoginForm';\n\nexport default function Login() {\n  return (\n    <>\n      <Helmet>\n        <title>Log In | Laravel Material</title>\n      </Helmet>\n      <Container maxWidth=\"sm\">\n        <LoginForm />\n      </Container>\n    </>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Helmet } from 'react-helmet';\nimport {\n  Box,\n  Button,\n  Typography,\n  Paper,\n  Container,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  IconButton\n} from '@material-ui/core';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Delete from '@material-ui/icons/Delete';\n\nimport { apiBase } from '../config';\nimport http from '../http';\nimport Loader from '../components/Loader';\n\nexport default function Archive() {\n  // State hooks.\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState({});\n  const [apiMore, setApiMore] = useState('');\n  const [moreLoaded, setMoreLoaded] = useState(false);\n  const [error, setError] = useState(false);\n\n  // API Path\n  const api = `${apiBase}/api/v1/todo`;\n\n  // Effect runs once on mount.\n  useEffect(() => {\n    http\n      .get(api)\n      .then(response => {\n        const { data } = response.data;\n        const apiMore = response.data.links.next;\n        setData(data);\n        setApiMore(apiMore);\n        setLoading(false);\n        setError(false);\n      })\n      .catch(() => {\n        setError('Unable to fetch data.');\n      });\n  }, [api]);\n\n  const loadMore = () => {\n    setLoading(true);\n    http\n      .get(apiMore)\n      .then(response => {\n        const apiMore = response.data.links.next;\n        const dataMore = data.concat(response.data.data);\n        setData(dataMore);\n        setApiMore(apiMore);\n        setLoading(false);\n        setError(false);\n        setMoreLoaded(true);\n      })\n      .catch(() => {\n        setError('Unable to fetch data.');\n      });\n  };\n\n  const deleteTodo = id => {\n    const todos = data;\n\n    http\n      .delete(`${api}/${id}`)\n      .then(response => {\n        if (response.status === 204) {\n          const index = todos.findIndex(\n            todo => parseInt(todo.id, 10) === parseInt(id, 10)\n          );\n          const update = [...todos.slice(0, index), ...todos.slice(index + 1)];\n          setData(update);\n        }\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  };\n\n  const todos = Array.from(data);\n\n  return (\n    <>\n      <Helmet>\n        <title>Archive | Laravel Material</title>\n      </Helmet>\n      <Container maxWidth=\"md\">\n        {error && <MuiAlert severity=\"error\">{error}</MuiAlert>}\n\n        <Typography component=\"h2\" variant=\"h3\">\n          Archive\n        </Typography>\n\n        <Box mb={4}>\n          <Paper>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Time</TableCell>\n                  <TableCell>To Do</TableCell>\n                  <TableCell>Status</TableCell>\n                  <TableCell>Action</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {todos.map(todo => (\n                  <TableRow key={todo.id}>\n                    <TableCell component=\"th\" scope=\"row\">\n                      {todo.created_at}\n                    </TableCell>\n                    <TableCell>{todo.value}</TableCell>\n                    <TableCell>{todo.status}</TableCell>\n                    <TableCell>\n                      <IconButton\n                        aria-label=\"Close\"\n                        onClick={() => deleteTodo(todo.id)}\n                      >\n                        <Delete />\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </Paper>\n        </Box>\n\n        {apiMore && (\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={loading}\n            fullWidth\n            type=\"submit\"\n            onClick={loadMore}\n          >\n            {!loading && <span>Load More</span>}\n            {loading && <Loader />}\n            )}\n          </Button>\n        )}\n\n        {apiMore === null && moreLoaded === true && (\n          <Typography variant=\"body2\" align=\"center\">\n            Everything loaded.\n          </Typography>\n        )}\n      </Container>\n    </>\n  );\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  IconButton,\n  Menu,\n  MenuItem\n} from '@material-ui/core';\n\nimport * as actions from '../store/actions';\n\nfunction Header(props) {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  const history = useHistory();\n\n  const handleMenu = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const navigateLogIn = () => {\n    setAnchorEl(null);\n    history.push('/login');\n  };\n\n  const handleLogout = () => {\n    setAnchorEl(null);\n    props.dispatch(actions.authLogout());\n  };\n\n  return (\n    <AppBar position=\"static\" elevation={0}>\n      <Toolbar>\n        <Typography component=\"h1\" variant=\"h6\" className={classes.title}>\n          <Link to=\"/\" className={classes.titleLink}>\n            Laravel Material\n          </Link>\n        </Typography>\n\n        <div>\n          <IconButton\n            aria-label=\"account of current user\"\n            aria-controls=\"menu-appbar\"\n            aria-haspopup=\"true\"\n            onClick={handleMenu}\n            color=\"inherit\"\n          >\n            <AccountCircle />\n          </IconButton>\n          <Menu\n            id=\"menu-appbar\"\n            anchorEl={anchorEl}\n            anchorOrigin={{\n              vertical: 'top',\n              horizontal: 'right'\n            }}\n            keepMounted\n            transformOrigin={{\n              vertical: 'top',\n              horizontal: 'right'\n            }}\n            open={open}\n            onClose={handleClose}\n          >\n            {!props.isAuthenticated && (\n              <MenuItem onClick={navigateLogIn}>Log In</MenuItem>\n            )}\n            {props.isAuthenticated && (\n              <MenuItem onClick={handleLogout}>Logout</MenuItem>\n            )}\n          </Menu>\n        </div>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n  title: {\n    flexGrow: 1\n  },\n  titleLink: {\n    color: theme.white,\n    textDecoration: 'none',\n    '&:hover': {\n      color: theme.white,\n      textDecoration: 'none'\n    }\n  }\n}));\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.Auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps)(Header);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Box, Container, Grid } from '@material-ui/core';\n\nimport Header from './components/Header';\n\nconst Base = ({ children }) => (\n  <Grid container direction=\"column\" style={{ minHeight: '100%' }}>\n    <Grid item>\n      <Header />\n    </Grid>\n    <Grid\n      container\n      justify=\"center\"\n      alignItems=\"center\"\n      style={{\n        flexGrow: '1'\n      }}\n    >\n      <Container maxWidth=\"lg\">\n        <Box px={2} py={4}>\n          {children}\n        </Box>\n      </Container>\n    </Grid>\n  </Grid>\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.Auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps)(Base);\n","import React from 'react';\nimport { Route } from 'react-router';\nimport Base from '../Base';\n\nconst PublicRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={props => (\n      <Base>\n        <Component {...props} />\n      </Base>\n    )}\n  />\n);\n\nexport default PublicRoute;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router';\nimport { connect } from 'react-redux';\nimport Base from '../Base';\n\nconst PrivateRoute = ({ component: Component, isAuthenticated, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      isAuthenticated ? (\n        <Base>\n          <Component {...props} />\n        </Base>\n      ) : (\n        <Redirect\n          to={{\n            pathname: '/login',\n            state: { from: props.location }\n          }}\n        />\n      )\n    }\n  />\n);\n\nPrivateRoute.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.Auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route } from 'react-router';\nimport { connect } from 'react-redux';\n\nimport Base from '../Base';\n\nconst SplitRoute = ({\n  component: Component,\n  fallback: Fallback,\n  isAuthenticated,\n  ...rest\n}) => (\n  <Route\n    {...rest}\n    render={props =>\n      isAuthenticated ? (\n        <Base>\n          <Component {...props} />\n        </Base>\n      ) : (\n        <Base>\n          <Fallback {...props} />\n        </Base>\n      )\n    }\n  />\n);\n\nSplitRoute.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.Auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps)(SplitRoute);\n","import React from 'react';\nimport { BrowserRouter as Router, Switch } from 'react-router-dom';\nimport routes from './routes';\nimport PublicRoute from './Public';\nimport PrivateRoute from './Private';\nimport SplitRoute from './Split';\n\n// This is config for GitHub Pages.\n// If you are deploying to a top level domain,\n// you can remove the basename prop from the Router.\nconst base = process.env.PUBLIC_URL || '/';\n\nconst Routes = () => (\n  <Router basename={base}>\n    <Switch>\n      {routes.map(route => {\n        if (route.auth && route.fallback) {\n          return <SplitRoute key={route.path} {...route} />;\n        } else if (route.auth) {\n          return <PrivateRoute key={route.path} {...route} />;\n        }\n        return <PublicRoute key={route.path} {...route} />;\n      })}\n    </Switch>\n  </Router>\n);\n\nexport default Routes;\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  text: '#222',\n  white: '#fff',\n  bg1: '#F5F5F6',\n  bg2: '#E1E2E1',\n  palette: {\n    primary: {\n      light: '#80b4ff',\n      main: '#4285f4',\n      dark: '#0059c1',\n      contrastText: '#fff'\n    }\n  },\n  typography: {\n    fontSize: 16,\n    h1: {\n      fontSize: '3rem',\n      fontWeight: 300\n    },\n    h2: {\n      fontSize: '2.2rem',\n      fontWeight: 300\n    },\n    h3: {\n      fontSize: '2rem',\n      fontWeight: 300,\n      marginBottom: '1rem'\n    },\n    body1: {\n      marginBottom: '1rem'\n    }\n  },\n  overrides: {\n    MuiMenuItem: {\n      root: {\n        marginBottom: '0'\n      }\n    },\n    MuiInputBase: {\n      root: {\n        marginBottom: '0'\n      }\n    }\n  }\n});\n\nexport default theme;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch } from 'react-router-dom';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { Provider } from 'react-redux';\n\nimport Routes from './routes';\nimport store from './store';\nimport theme from './theme';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <ThemeProvider theme={theme}>\n          <Router>\n            <Switch>\n              <Routes />\n            </Switch>\n          </Router>\n        </ThemeProvider>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport * as action from './store/actions';\nimport store from './store';\n\nimport './index.css';\n\nstore.dispatch(action.authCheck());\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}